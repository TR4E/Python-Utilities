import base64
import hashlib

from cryptography.fernet import Fernet

CHANNELS = [71175, 63919, 30710, 60571, 68725, 43526, 93416, 56689, 16032, 46832, 21464, 53563, 35520, 31217, 85576, 54272, 11871, 69239, 39323, 69612, 99383, 50274, 11737, 47405, 78916, 66542, 64660, 46058, 35615, 41063, 66233, 20816, 70873, 16833, 49634, 12642, 75673, 12947, 76132, 89428, 19216, 59312, 56961, 49530, 73748, 88039, 74213, 14471, 62494, 29370, 89232, 65482, 73220, 32214, 29875, 78688, 33510, 38144, 48954, 74265, 47057, 36307, 83789, 25067, 71060, 37493, 21878, 11124, 66666, 59214, 63705, 41199, 93307, 70308, 60669, 54511, 80955, 49171, 87203, 93523, 88020, 44829, 44340, 13461, 72370, 13684, 74344, 19417, 34900, 56635, 97653, 34973, 79948, 64118, 43060, 65197, 94157, 18555, 93853, 30638, 68955, 28623, 87248, 73406, 11289, 48690, 93340, 20934, 51464, 37432, 29785, 64043, 50223, 65247, 54396, 81794, 25023, 56473, 43123, 92511, 66007, 36743, 76183, 48634, 95317, 37006, 60684, 51516, 21741, 89703, 34921, 75808, 20251, 88779, 79866, 59205, 29480, 87425, 72665, 61935,
            70346, 54950, 39357, 57438, 95712, 84577, 31220, 94919, 80890, 56167, 15360, 77995, 31511, 67340, 80681, 81191, 81157, 67527, 19217, 56419, 70536, 38351, 16658, 60442, 47154, 12761, 14188, 31326, 54497, 63434, 75877, 15291, 61442, 78361, 22575, 34073, 78875, 78414, 12962, 25617, 56420, 54733, 28410, 27856, 87711, 67127, 54116, 98276, 11686, 54173, 71560, 12043, 68789, 43463, 84940, 97720, 61565, 59896, 75247, 49620, 79664, 80472, 67642, 56897, 62455, 39338, 62695, 98849, 46873, 16560, 37165, 79723, 38355, 35151, 43296, 40469, 70388, 84774, 60386, 48254, 53600, 42495, 97914, 41120, 20604, 19458, 81722, 99660, 18595, 12602, 34781, 61414, 18158, 46421, 20790, 83197, 33763, 34038, 82005, 28372, 30212, 86784, 80622, 13551, 66106, 25335, 26951, 66886, 15527, 90865, 15446, 31491, 22744, 88497, 37949, 54139, 61637, 65904, 50107, 84924, 50732, 53740, 27206, 58079, 33781, 37973, 11964, 62835, 90920, 43343, 33441, 94568, 88934, 14103, 54402, 77573, 40471, 89023, 16943, 56173,
            48342, 22089, 69955, 27809, 92019, 25630, 33796, 75733, 69515, 22622, 57059, 39616, 50156, 17635, 22692, 93659, 84911, 88393, 78847, 80156, 12635, 24810, 17341, 21686, 98740, 57432, 53221, 28918, 95748, 56180, 23551, 24275, 26844, 29465, 96313, 66503, 66592, 91738, 37112, 17799, 74185, 73184, 72113, 89072, 57163, 89051, 53045, 23974, 28725, 99948, 45034, 15317, 94784, 73202, 42277, 42566, 24364, 40521, 34160, 73048, 66347, 20552, 55225, 77148, 47401, 26684, 18631, 94906, 21421, 26519, 64090, 66366, 86607, 60864, 21645, 53347, 52589, 11713, 33827, 92811, 26988, 45674, 83627, 21363, 55316, 54825, 28270, 95151, 25494, 70402, 32426, 93127, 85603, 59115, 78999, 46852, 80585, 99337, 91526, 47029, 51127, 87479, 17008, 67880, 11578, 14546, 50169, 88896, 95397, 75969, 64821, 68382, 96005, 37312, 84314, 46606, 22865, 29608, 66086, 67730, 85762, 97451, 11293, 96341, 50281, 76939, 89678, 97066, 81350, 55484, 56763, 19686, 73659, 84943, 30021, 88534, 48246, 45388, 28698, 58665,
            36807, 25527, 63558, 17173, 90858, 34490, 52172, 64420, 82913, 55150, 93923, 72442, 69554, 48492, 53306, 74148, 89016, 94170, 74356, 25447, 61189, 94543, 16098, 71208, 82012, 88984, 83368, 56984, 30458, 73293, 63761, 19616, 11589, 78532, 57697, 37456, 68147, 43670, 65840, 81102, 34394, 61264, 27412, 47800, 87114, 55548, 31393, 43269, 95842, 36966, 86771, 32295, 96971, 24101, 51745, 15416, 39836, 39257, 35292, 61371, 94720, 30601, 44763, 15617, 93003, 33191, 34694, 75221, 17879, 26398, 64440, 73944, 11730, 35109, 24923, 11481, 11514, 54520, 40131, 43514, 87653, 97057, 21511, 94534, 89147, 43469, 85358, 26484, 23962, 12055, 87324, 29021, 84726, 76878, 62960, 59856, 94669, 15913, 27786, 48934, 76949, 13141, 66549, 52330, 66714, 47918, 95608, 98609, 84307, 93729, 39966, 13093, 23813, 39949, 89056, 53308, 26002, 72787, 32410, 71122, 66562, 95023, 88951, 33255, 46526, 26561, 66591, 21689, 32339, 43991, 15969, 65119, 29968, 13497, 92542, 77199, 31916, 80340, 95266, 77160,
            67074, 40000, 88735, 48283, 63214, 55901, 14218, 69303, 53079, 23330, 52332, 25872, 56368, 56340, 27542, 78277, 59698, 56382, 32054, 12054, 48752, 33054, 71967, 60012, 64213, 50002, 52112, 24713, 96296, 55489, 83476, 21671, 78364, 57285, 92866, 82181, 32270, 41621, 62621, 81291, 49933, 11153, 46198, 81555, 52924, 54850, 69867, 36017, 90276, 43429, 36028, 54293, 42676, 12738, 15799, 26875, 27691, 24901, 67470, 40574, 85078, 19664, 89178, 38236, 57936, 33850, 97673, 38432, 19499, 88427, 22601, 56183, 54199, 89969, 21155, 33705, 29626, 53043, 59020, 53870, 53430, 33496, 32644, 13087, 32143, 19455, 58825, 78575, 74322, 69034, 81647, 40170, 38237, 78664, 26870, 59617, 41878, 64534, 14214, 14666, 13018, 48237, 99361, 11454, 31677, 43002, 41477, 88013, 21803, 66934, 74504, 51822, 56385, 23122, 28486, 34028, 51313, 70135, 44696, 71149, 39787, 23066, 44017, 87594, 62508, 61722, 49033, 16984, 71349, 70143, 65658, 66771, 17736, 73285, 55978, 87210, 40208, 69635, 36221, 31359,
            26393, 74774, 15954, 53546, 76375, 89899, 59708, 38000, 14714, 61137, 73175, 30569, 76710, 21254, 30276, 19377, 80952, 35841, 66402, 14896, 57145, 96708, 95014, 80678, 69729, 68653, 48693, 59914, 67737, 25523, 63688, 12282, 90228, 91615, 72034, 59055, 66570, 35041, 85008, 39741, 89883, 55464, 93499, 59994, 47712, 44033, 61882, 44859, 84185, 15301, 40903, 99262, 88016, 50582, 26264, 45279, 73615, 44163, 16360, 97374, 50573, 83257, 16595, 86634, 78804, 27144, 72580, 61755, 52449, 77156, 25406, 94604, 13998, 93561, 15946, 86505, 99618, 81005, 63899, 20590, 44356, 74664, 52385, 52233, 42261, 76376, 85624, 15415, 67812, 28815, 76643, 64758, 85237, 96287, 39327, 76482, 44990, 51544, 84916, 76198, 71567, 84902, 67292, 76496, 62288, 45694, 83749, 71856, 37055, 86683, 43288, 75669, 74932, 50382, 36674, 30883, 86520, 59854, 82130, 42625, 11665, 24223, 13479, 30503, 85810, 38815, 54557, 58561, 87604, 63137, 56308, 74679, 39959, 72295, 91409, 84965, 57879, 92210, 25300, 43210,
            70704, 56832, 18706, 94240, 27447, 17577, 84123, 40571, 90370, 96623, 58991, 46265, 41906, 76555, 24517, 52550, 72794, 33740, 97482, 76900, 81834, 46511, 47806, 26855, 71494, 14144, 23875, 12015, 31331, 13471, 93764, 41997, 66613, 91491, 56185, 80412, 70810, 22159, 81758, 82574, 63006, 70172, 83746, 31718, 92172, 35257, 71636, 94873, 25620, 82528, 15549, 47182, 73410, 50885, 52949, 91119, 79011, 87245, 57651, 11501, 69888, 90546, 39235, 46905, 17190, 35088, 43856, 65011, 77031, 38368, 25203, 91482, 96135, 36530, 92504, 63628, 82328, 84963, 61309, 88447, 94241, 53225, 71932, 34117, 82469, 75260, 19489, 64684, 46789, 79783, 57676, 88052, 19614, 41897, 20650, 43075, 85106, 44125, 65968, 31709, 82143, 30618, 70358, 71907, 73091, 99293, 85717, 40387, 40536, 71263, 11797, 58918, 99474, 73528, 62140, 80465, 90269, 20029, 88971, 67422, 89681, 83198, 46527, 46803, 68529, 21682, 21898, 17304, 95423, 27073, 35474, 36724, 69455, 70871, 19059, 65933, 72529, 70012, 44453, 59777,
            99083, 12954, 96571, 71066, 74552, 12330, 67594, 74178, 26216, 53699, 40717, 58989, 46956, 44013, 84284, 68593, 53242, 17855, 55193, 37929, 72556, 89423, 84733, 43717, 33719, 56588, 96772, 49724, 58848, 42939, 36754, 42570, 51744, 25501, 66640, 92014, 41988, 28722, 42539, 63022, 93390, 69537, 44301, 97072]


def generate_key(key):
    result = key

    while len(result) < 32:
        result += "X"

    return base64.urlsafe_b64encode(result.encode())


def encrypt(key, string, amount, channel=0):
    result = string

    amount += 1

    for i in range(1, amount):
        cipher = Fernet(generate_key("{}:{}".format(CHANNELS[channel + i], key)))

        result = cipher.encrypt(result.encode()).decode("UTF-8")

    return result


def decrypt(key, string, amount, channel=0):
    result = string

    amount += 1

    for i in range(1, amount):
        cipher = Fernet(generate_key("{}:{}".format(CHANNELS[channel + (amount - i)], key)))

        result = cipher.decrypt(result).decode("UTF-8")

    return result


def hash(string, amount=1, pepper=None, salt=None):
    if pepper is not None:
        string = pepper + "$" + string

    if salt is not None:
        string = string + "$" + salt

    for i in range(amount):
        string += str(i)

        string = hashlib.sha512(bytes(string, "UTF-8")).hexdigest()

    return string
